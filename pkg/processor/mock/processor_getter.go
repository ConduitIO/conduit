// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/conduitio/conduit/pkg/processor (interfaces: ProcessorGetter)
//
// Generated by this command:
//
//	mockgen -destination=mock/processor_getter.go -package=mock -mock_names=ProcessorGetter=ProcessorGetter . ProcessorGetter
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	sdk "github.com/conduitio/conduit-processor-sdk"
	gomock "go.uber.org/mock/gomock"
)

// ProcessorGetter is a mock of ProcessorGetter interface.
type ProcessorGetter struct {
	ctrl     *gomock.Controller
	recorder *ProcessorGetterMockRecorder
}

// ProcessorGetterMockRecorder is the mock recorder for ProcessorGetter.
type ProcessorGetterMockRecorder struct {
	mock *ProcessorGetter
}

// NewProcessorGetter creates a new mock instance.
func NewProcessorGetter(ctrl *gomock.Controller) *ProcessorGetter {
	mock := &ProcessorGetter{ctrl: ctrl}
	mock.recorder = &ProcessorGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *ProcessorGetter) EXPECT() *ProcessorGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *ProcessorGetter) Get(arg0 context.Context, arg1, arg2 string) (sdk.Processor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(sdk.Processor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *ProcessorGetterMockRecorder) Get(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*ProcessorGetter)(nil).Get), arg0, arg1, arg2)
}
