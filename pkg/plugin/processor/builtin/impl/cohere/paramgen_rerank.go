// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package cohere

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	rerankProcessorConfigApiKey             = "apiKey"
	rerankProcessorConfigBackoffRetryCount  = "backoffRetry.count"
	rerankProcessorConfigBackoffRetryFactor = "backoffRetry.factor"
	rerankProcessorConfigBackoffRetryMax    = "backoffRetry.max"
	rerankProcessorConfigBackoffRetryMin    = "backoffRetry.min"
	rerankProcessorConfigModel              = "model"
	rerankProcessorConfigQuery              = "query"
	rerankProcessorConfigRequestBody        = "request.body"
	rerankProcessorConfigResponseBody       = "response.body"
)

func (rerankProcessorConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		rerankProcessorConfigApiKey: {
			Default:     "",
			Description: "APIKey is the API key for Cohere api calls.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		rerankProcessorConfigBackoffRetryCount: {
			Default:     "0",
			Description: "Maximum number of retries for an individual record when backing off following an error.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: -1},
			},
		},
		rerankProcessorConfigBackoffRetryFactor: {
			Default:     "2",
			Description: "The multiplying factor for each increment step.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: 0},
			},
		},
		rerankProcessorConfigBackoffRetryMax: {
			Default:     "5s",
			Description: "The maximum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		rerankProcessorConfigBackoffRetryMin: {
			Default:     "100ms",
			Description: "The minimum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		rerankProcessorConfigModel: {
			Default:     "rerank-v3.5",
			Description: "Model is one of the name of a compatible rerank model version.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		rerankProcessorConfigQuery: {
			Default:     "",
			Description: "Query is the search query.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		rerankProcessorConfigRequestBody: {
			Default:     ".Payload.After",
			Description: "RequestBodyRef specifies the api request field.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		rerankProcessorConfigResponseBody: {
			Default:     ".Payload.After",
			Description: "ResponseBodyRef specifies in which field should the response body be saved.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
	}
}
