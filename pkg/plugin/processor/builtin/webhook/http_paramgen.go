// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package webhook

import (
	"github.com/conduitio/conduit-commons/config"
)

func (httpConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		"backoffRetry.count": {
			Default:     "0",
			Description: "BackoffRetryCount is the maximum number of retries for an individual record\nwhen backing off following an error.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: -1},
			},
		},
		"backoffRetry.factor": {
			Default:     "2",
			Description: "BackoffRetryFactor is the multiplying factor for each increment step.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: 0},
			},
		},
		"backoffRetry.max": {
			Default:     "5s",
			Description: "BackoffRetryMax is the maximum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		"backoffRetry.min": {
			Default:     "100ms",
			Description: "BackoffRetryMin is the minimum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		"request.body": {
			Default:     ".",
			Description: "RequestBodyRef specifies which field from the input record\nshould be used as the body in the HTTP request.\nThe value of this parameter should be a valid record field reference:\nSee: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.contentType": {
			Default:     "application/json",
			Description: "ContentType is the value of the Content-Type header.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.method": {
			Default:     "POST",
			Description: "Method is the HTTP request method to be used.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.url": {
			Default:     "",
			Description: "URL used in the HTTP request.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"response.body": {
			Default:     ".Payload.After",
			Description: "ResponseBodyRef specifies to which field should the\nresponse body be saved to.\nThe value of this parameter should be a valid record field reference:\nSee: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"response.status": {
			Default:     "",
			Description: "ResponseStatusRef specifies to which field should the\nresponse status be saved to.\nThe value of this parameter should be a valid record field reference.\nIf no value is set, then the response status will NOT be saved.\nSee: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
	}
}
