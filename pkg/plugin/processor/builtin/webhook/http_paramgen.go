// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package webhook

import (
	"github.com/conduitio/conduit-commons/config"
)

func (httpConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		"backoffRetry.count": {
			Default:     "0",
			Description: "backoffRetry.count is the maximum number of retries for an individual record when backing off following an error.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: -1},
			},
		},
		"backoffRetry.factor": {
			Default:     "2",
			Description: "backoffRetry.factor is the multiplying factor for each increment step.",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: 0},
			},
		},
		"backoffRetry.max": {
			Default:     "5s",
			Description: "backoffRetry.max is the maximum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		"backoffRetry.min": {
			Default:     "100ms",
			Description: "backoffRetry.min is the minimum waiting time before retrying.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		"request.body": {
			Default:     ".",
			Description: "request.body specifies which field from the input record should be used as the body in the HTTP request. The value of this parameter should be a valid record field reference: See: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.contentType": {
			Default:     "application/json",
			Description: "request.contentType is the value of the Content-Type header.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.method": {
			Default:     "POST",
			Description: "request.method is the HTTP request method to be used.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"request.url": {
			Default:     "",
			Description: "request.url used in the HTTP request.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"response.body": {
			Default:     ".Payload.After",
			Description: "response.body specifies to which field should the response body be saved to. The value of this parameter should be a valid record field reference: See: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"response.status": {
			Default:     "",
			Description: "response.status specifies to which field should the response status be saved to. The value of this parameter should be a valid record field reference. If no value is set, then the response status will NOT be saved. See: sdk.NewReferenceResolver",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
	}
}
