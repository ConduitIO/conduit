{
  "specification": {
    "name": "clone",
    "summary": "Clone records.",
    "description": "Clone all records N times. All cloned records will have\nthe same data as the original record, except for the metadata field\n`clone.index`, which will be set to the index of the clone (0-based).\n\n**Important:** Add a [condition](https://conduit.io/docs/using/processors/conditions)\nto this processor if you only want to clone some records.\n\n**Important:** This processor currently only works using the pipeline architecture\nv2, which can be enabled using the flag `--preview.pipeline-arch-v2`.\nUsing it without the flag will result in an error.",
    "version": "v0.1.0",
    "author": "Meroxa, Inc.",
    "parameters": {
      "count": {
        "default": "",
        "description": "The number of records after cloning (e.g. if count is 3, the processor\nwill output 3 records for every input record).",
        "type": "int",
        "validations": [
          {
            "type": "required",
            "value": ""
          },
          {
            "type": "greater-than",
            "value": "1"
          }
        ]
      },
      "sdk.schema.decode.key.enabled": {
        "default": "true",
        "description": "Whether to decode the record key using its corresponding schema from the schema registry.",
        "type": "bool",
        "validations": null
      },
      "sdk.schema.decode.payload.enabled": {
        "default": "true",
        "description": "Whether to decode the record payload using its corresponding schema from the schema registry.",
        "type": "bool",
        "validations": null
      },
      "sdk.schema.encode.key.enabled": {
        "default": "true",
        "description": "Whether to encode the record key using its corresponding schema from the schema registry.",
        "type": "bool",
        "validations": null
      },
      "sdk.schema.encode.payload.enabled": {
        "default": "true",
        "description": "Whether to encode the record payload using its corresponding schema from the schema registry.",
        "type": "bool",
        "validations": null
      }
    }
  },
  "examples": [
    {
      "summary": "Clone record into multiple records",
      "description": "This example takes a record and clones it into 2 records, each containing the same data, except for the metadata field `clone.index`.",
      "config": {
        "count": "2"
      },
      "have": {
        "position": null,
        "operation": "create",
        "metadata": {
          "foo": "bar"
        },
        "key": {
          "id": 123
        },
        "payload": {
          "before": null,
          "after": {
            "age": 30,
            "name": "Alice"
          }
        }
      },
      "want": [
        {
          "position": null,
          "operation": "create",
          "metadata": {
            "clone.index": "0",
            "foo": "bar"
          },
          "key": {
            "id": 123
          },
          "payload": {
            "before": null,
            "after": {
              "age": 30,
              "name": "Alice"
            }
          }
        },
        {
          "position": null,
          "operation": "create",
          "metadata": {
            "clone.index": "1",
            "foo": "bar"
          },
          "key": {
            "id": 123
          },
          "payload": {
            "before": null,
            "after": {
              "age": 30,
              "name": "Alice"
            }
          }
        }
      ]
    }
  ]
}
