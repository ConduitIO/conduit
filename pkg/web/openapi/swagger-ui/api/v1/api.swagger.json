{
  "swagger": "2.0",
  "info": {
    "title": "Conduit REST API",
    "version": "v0.1.0",
    "contact": {
      "name": "Conduit project",
      "url": "https://github.com/conduitio/conduit"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://github.com/ConduitIO/conduit/blob/main/LICENSE.md"
    }
  },
  "tags": [
    {
      "name": "PipelineService"
    },
    {
      "name": "ConnectorService"
    },
    {
      "name": "ProcessorService"
    },
    {
      "name": "InformationService"
    },
    {
      "name": "PluginService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/info": {
      "get": {
        "operationId": "InformationService_GetInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiv1Info"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "tags": [
          "InformationService"
        ]
      }
    },
    "/v1/connectors": {
      "get": {
        "operationId": "ConnectorService_ListConnectors",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Connector"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "post": {
        "operationId": "ConnectorService_CreateConnector",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Connector"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateConnectorRequest"
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1/connectors/validate": {
      "post": {
        "operationId": "ConnectorService_ValidateConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateConnectorResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "validation error: `aws.accessKeyId` config value must be set",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "could not dispense destination",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateConnectorRequest"
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1/connectors/{id}": {
      "get": {
        "operationId": "ConnectorService_GetConnector",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Connector"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "delete": {
        "operationId": "ConnectorService_DeleteConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteConnectorResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "failed precondition error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "put": {
        "operationId": "ConnectorService_UpdateConnector",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Connector"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/v1ConnectorConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1/connectors/{id}/inspect": {
      "get": {
        "operationId": "ConnectorService_InspectConnector",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1Record"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1InspectConnectorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1/pipelines": {
      "get": {
        "operationId": "PipelineService_ListPipelines",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Pipeline"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Regex to filter pipelines by name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "post": {
        "operationId": "PipelineService_CreatePipeline",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 6,
                "message": "already exists error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePipelineRequest"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/pipelines/import": {
      "post": {
        "operationId": "PipelineService_ImportPipeline",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pipeline",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/pipelines/{id}": {
      "get": {
        "operationId": "PipelineService_GetPipeline",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "delete": {
        "operationId": "PipelineService_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePipelineResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "failed precondition error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "put": {
        "operationId": "PipelineService_UpdatePipeline",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 6,
                "message": "already exists error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/v1PipelineConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/pipelines/{id}/export": {
      "post": {
        "operationId": "PipelineService_ExportPipeline",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Pipeline"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/pipelines/{id}/start": {
      "post": {
        "operationId": "PipelineService_StartPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartPipelineResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "failed precondition error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/pipelines/{id}/stop": {
      "post": {
        "operationId": "PipelineService_StopPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StopPipelineResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "failed precondition error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1/plugins": {
      "get": {
        "operationId": "PluginService_ListPlugins",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1PluginSpecifications"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Regex to filter plugins by name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PluginService"
        ]
      }
    },
    "/v1/processors": {
      "get": {
        "operationId": "ProcessorService_ListProcessors",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v1Processor"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "parentIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProcessorService"
        ]
      },
      "post": {
        "operationId": "ProcessorService_CreateProcessor",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Processor"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProcessorRequest"
            }
          }
        ],
        "tags": [
          "ProcessorService"
        ]
      }
    },
    "/v1/processors/{id}": {
      "get": {
        "operationId": "ProcessorService_GetProcessor",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Processor"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProcessorService"
        ]
      },
      "delete": {
        "operationId": "ProcessorService_DeleteProcessor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProcessorResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 9,
                "message": "failed precondition error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProcessorService"
        ]
      },
      "put": {
        "operationId": "ProcessorService_UpdateProcessor",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Processor"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 3,
                "message": "invalid arguments error",
                "details": []
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 5,
                "message": "resource not found error",
                "details": []
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            },
            "examples": {
              "application/json": {
                "code": 13,
                "message": "server error",
                "details": []
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/v1ProcessorConfig"
                }
              }
            }
          }
        ],
        "tags": [
          "ProcessorService"
        ]
      }
    }
  },
  "definitions": {
    "ConnectorDestinationState": {
      "type": "object",
      "properties": {
        "positions": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ConnectorSourceState": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ParameterValidation": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ParameterValidationType"
        },
        "value": {
          "type": "string",
          "description": "The value to be compared with the parameter,\nor a comma separated list in case of Validation.TYPE_INCLUSION or Validation.TYPE_EXCLUSION."
        }
      },
      "description": "Validation to be made on the parameter."
    },
    "ParameterValidationType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_REQUIRED",
        "TYPE_GREATER_THAN",
        "TYPE_LESS_THAN",
        "TYPE_INCLUSION",
        "TYPE_EXCLUSION",
        "TYPE_REGEX"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": " - TYPE_REQUIRED: Parameter must be present.\n - TYPE_GREATER_THAN: Parameter must be greater than {value}.\n - TYPE_LESS_THAN: Parameter must be less than {value}.\n - TYPE_INCLUSION: Parameter must be included in the comma separated list {value}.\n - TYPE_EXCLUSION: Parameter must not be included in the comma separated list {value}.\n - TYPE_REGEX: Parameter must match the regex {value}."
    },
    "PipelineState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1PipelineStatus"
        },
        "error": {
          "type": "string",
          "description": "Error message when pipeline status is STATUS_DEGRADED."
        }
      }
    },
    "PluginSpecificationsParameter": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "default": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PluginSpecificationsParameterType"
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterValidation"
          }
        }
      }
    },
    "PluginSpecificationsParameterType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_STRING",
        "TYPE_INT",
        "TYPE_FLOAT",
        "TYPE_BOOL",
        "TYPE_FILE",
        "TYPE_DURATION"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "Type shows the parameter type.\n\n - TYPE_STRING: Parameter is a string.\n - TYPE_INT: Parameter is an integer.\n - TYPE_FLOAT: Parameter is a float.\n - TYPE_BOOL: Parameter is a boolean.\n - TYPE_FILE: Parameter is a file.\n - TYPE_DURATION: Parameter is a duration."
    },
    "ProcessorParent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ProcessorParentType"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ProcessorParentType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_CONNECTOR",
        "TYPE_PIPELINE"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "Type shows the processor's parent type.\n\n - TYPE_CONNECTOR: Processor parent is a connector.\n - TYPE_PIPELINE: Processor parent is a pipeline."
    },
    "apiv1Info": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "arch": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "opencdcv1Operation": {
      "type": "string",
      "enum": [
        "OPERATION_UNSPECIFIED",
        "OPERATION_CREATE",
        "OPERATION_UPDATE",
        "OPERATION_DELETE",
        "OPERATION_SNAPSHOT"
      ],
      "default": "OPERATION_UNSPECIFIED",
      "description": "Operation defines what triggered the creation of a record.\n\n - OPERATION_CREATE: Records with operation create contain data of a newly created entity.\n - OPERATION_UPDATE: Records with operation update contain data of an updated entity.\n - OPERATION_DELETE: Records with operation delete contain data of a deleted entity.\n - OPERATION_SNAPSHOT: Records with operation snapshot contain data of a previously existing\nentity, fetched as part of a snapshot."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1Change": {
      "type": "object",
      "properties": {
        "before": {
          "$ref": "#/definitions/v1Data",
          "description": "Before contains the data before the operation occurred. This field is\noptional and should only be populated for operations \"update\" and \"delete\"\n(if the system supports fetching the data before the operation)."
        },
        "after": {
          "$ref": "#/definitions/v1Data",
          "description": "After contains the data after the operation occurred. This field should be\npopulated for all operations except \"delete\"."
        }
      },
      "description": "Change represents the data before and after the operation occurred."
    },
    "v1Connector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "destinationState": {
          "$ref": "#/definitions/ConnectorDestinationState"
        },
        "sourceState": {
          "$ref": "#/definitions/ConnectorSourceState"
        },
        "config": {
          "$ref": "#/definitions/v1ConnectorConfig"
        },
        "type": {
          "$ref": "#/definitions/v1ConnectorType"
        },
        "plugin": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "processorIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ConnectorConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ConnectorType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_SOURCE",
        "TYPE_DESTINATION"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "Type shows the connector type.\n\n - TYPE_SOURCE: Connector is a source.\n - TYPE_DESTINATION: Connector is a destination."
    },
    "v1CreateConnectorRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ConnectorType"
        },
        "plugin": {
          "type": "string",
          "description": "Plugin name is the name of the builtin plugin, or the absolute path of a standalone plugin."
        },
        "pipelineId": {
          "type": "string",
          "description": "ID of the pipeline to which the connector will get attached."
        },
        "config": {
          "$ref": "#/definitions/v1ConnectorConfig"
        }
      }
    },
    "v1CreateConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1Connector"
        }
      }
    },
    "v1CreatePipelineRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1PipelineConfig"
        }
      }
    },
    "v1CreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1CreateProcessorRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/ProcessorParent"
        },
        "config": {
          "$ref": "#/definitions/v1ProcessorConfig"
        }
      }
    },
    "v1CreateProcessorResponse": {
      "type": "object",
      "properties": {
        "processor": {
          "$ref": "#/definitions/v1Processor"
        }
      }
    },
    "v1Data": {
      "type": "object",
      "properties": {
        "rawData": {
          "type": "string",
          "format": "byte",
          "description": "Raw data contains unstructured data in form of a byte array."
        },
        "structuredData": {
          "type": "object",
          "description": "Structured data contains data in form of a struct with fields."
        }
      },
      "description": "Data is used to represent the record key and payload. It can be either raw\ndata (byte array) or structured data (struct)."
    },
    "v1DeleteConnectorResponse": {
      "type": "object"
    },
    "v1DeletePipelineResponse": {
      "type": "object"
    },
    "v1DeleteProcessorResponse": {
      "type": "object"
    },
    "v1ExportPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1GetConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1Connector"
        }
      }
    },
    "v1GetInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/apiv1Info"
        }
      }
    },
    "v1GetPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1GetProcessorResponse": {
      "type": "object",
      "properties": {
        "processor": {
          "$ref": "#/definitions/v1Processor"
        }
      }
    },
    "v1ImportPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1InspectConnectorResponse": {
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/v1Record"
        }
      }
    },
    "v1ListConnectorsResponse": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Connector"
          }
        }
      }
    },
    "v1ListPipelinesResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Pipeline"
          }
        }
      }
    },
    "v1ListPluginsResponse": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PluginSpecifications"
          }
        }
      }
    },
    "v1ListProcessorsResponse": {
      "type": "object",
      "properties": {
        "processors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Processor"
          }
        }
      }
    },
    "v1Pipeline": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/PipelineState"
        },
        "config": {
          "$ref": "#/definitions/v1PipelineConfig"
        },
        "connectorIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "processorIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1PipelineConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1PipelineStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_RUNNING",
        "STATUS_STOPPED",
        "STATUS_DEGRADED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "Status describes the pipeline status.\n\n - STATUS_RUNNING: Pipeline is running.\n - STATUS_STOPPED: Pipeline gracefully stopped.\n - STATUS_DEGRADED: Pipeline stopped with an error (see State.error)."
    },
    "v1PluginSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "destinationParams": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PluginSpecificationsParameter"
          }
        },
        "sourceParams": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PluginSpecificationsParameter"
          }
        }
      }
    },
    "v1Processor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "config": {
          "$ref": "#/definitions/v1ProcessorConfig"
        },
        "type": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/ProcessorParent"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ProcessorConfig": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1Record": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string",
          "format": "byte",
          "description": "Position uniquely identifies the record."
        },
        "operation": {
          "$ref": "#/definitions/opencdcv1Operation",
          "description": "Operation defines what triggered the creation of a record. There are four\npossibilities: create, update, delete or snapshot. The first three\noperations are encountered during normal CDC operation, while \"snapshot\" is\nmeant to represent records during an initial load. Depending on the\noperation, the record will contain either the payload before the change,\nafter the change, or both (see field payload)."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata contains optional information related to the record. Although the\nmap can contain arbitrary keys, the standard provides a set of standard\nmetadata fields (see options prefixed with metadata_*)."
        },
        "key": {
          "$ref": "#/definitions/v1Data",
          "description": "Key represents a value that should identify the entity (e.g. database row)."
        },
        "payload": {
          "$ref": "#/definitions/v1Change",
          "description": "Payload holds the payload change (data before and after the operation\noccurred)."
        }
      },
      "description": "Record contains data about a single change event related to a single entity."
    },
    "v1StartPipelineResponse": {
      "type": "object"
    },
    "v1StopPipelineResponse": {
      "type": "object"
    },
    "v1UpdateConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1Connector"
        }
      }
    },
    "v1UpdatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1Pipeline"
        }
      }
    },
    "v1UpdateProcessorResponse": {
      "type": "object",
      "properties": {
        "processor": {
          "$ref": "#/definitions/v1Processor"
        }
      }
    },
    "v1ValidateConnectorRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1ConnectorType"
        },
        "plugin": {
          "type": "string",
          "description": "Plugin name is the name of the builtin plugin (builtin:name), or the absolute path of a standalone plugin."
        },
        "config": {
          "$ref": "#/definitions/v1ConnectorConfig",
          "title": "Configurations for the connector to get validated"
        }
      }
    },
    "v1ValidateConnectorResponse": {
      "type": "object"
    }
  }
}
